{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"X:\\\\SIH\\\\Meri-Sadak\\\\screens\\\\RoadDetails.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\n\nvar RoadDetails = function RoadDetails(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      enableShift = _useState4[0],\n      setEnableShift = _useState4[1];\n\n  var ngrok_url = \"http://29e3833dc1e6.ngrok.io\";\n  var flask_url = \"http://632a0311e4c4.ngrok.io/predict\";\n\n  var getDetails = function getDetails(type) {\n    if (route.params) {\n      switch (type) {\n        case \"roadName\":\n          return route.params.roadName;\n\n        case \"roadNumber\":\n          return route.params.roadNumber;\n\n        case \"fromChainage\":\n          return route.params.fromChainage;\n\n        case \"toChainage\":\n          return route.params.toChainage;\n\n        case \"roadLength\":\n          return route.params.roadLength;\n\n        case \"from\":\n          return route.params.from;\n\n        case \"to\":\n          return route.params.to;\n\n        case \"pci\":\n          return route.params.pci;\n\n        case \"location\":\n          return route.params.location;\n\n        case \"numImage\":\n          return route.params.numImage;\n\n        case \"timeCreated\":\n          return route.params.timeCreated;\n\n        case \"timeModified\":\n          return route.params.timeModified;\n\n        case \"imageUrls\":\n          return route.params.imageUrls;\n\n        case \"damageImageUrls\":\n          return route.params.damageImageUrls;\n      }\n    } else {\n      switch (type) {\n        case \"roadName\":\n          return \"\";\n\n        case \"roadNumber\":\n          return \"\";\n\n        case \"fromChainage\":\n          return '';\n\n        case \"toChainage\":\n          return '';\n\n        case \"roadLength\":\n          return '';\n\n        case \"from\":\n          return \"\";\n\n        case \"to\":\n          return \"\";\n\n        case \"pci\":\n          return 1;\n\n        case \"location\":\n          return [];\n\n        case \"numImage\":\n          return 0;\n\n        case \"timeCreated\":\n          return \"\";\n\n        case \"timeModified\":\n          return \"\";\n\n        case \"imageUrls\":\n          return [];\n\n        case \"damageImageUrls\":\n          return [];\n      }\n    }\n  };\n\n  var _useState5 = useState(getDetails('roadNumber')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      roadNumber = _useState6[0],\n      setRoadNumber = _useState6[1];\n\n  var _useState7 = useState(getDetails('roadName')),\n      _useState8 = _slicedToArray(_useState7, 2),\n      roadName = _useState8[0],\n      setRoadName = _useState8[1];\n\n  var _useState9 = useState(getDetails('toChainage')),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toChainage = _useState10[0],\n      setToChainage = _useState10[1];\n\n  var _useState11 = useState(getDetails('fromChainage')),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fromChainage = _useState12[0],\n      setFromChainage = _useState12[1];\n\n  var _useState13 = useState(getDetails('roadLength')),\n      _useState14 = _slicedToArray(_useState13, 2),\n      roadLength = _useState14[0],\n      setRoadLength = _useState14[1];\n\n  var _useState15 = useState(getDetails('from')),\n      _useState16 = _slicedToArray(_useState15, 2),\n      from = _useState16[0],\n      setFrom = _useState16[1];\n\n  var _useState17 = useState(getDetails('to')),\n      _useState18 = _slicedToArray(_useState17, 2),\n      to = _useState18[0],\n      setTo = _useState18[1];\n\n  var _useState19 = useState(getDetails('pci')),\n      _useState20 = _slicedToArray(_useState19, 2),\n      pci = _useState20[0],\n      setPCI = _useState20[1];\n\n  var _useState21 = useState(getDetails('location')),\n      _useState22 = _slicedToArray(_useState21, 2),\n      location = _useState22[0],\n      setLocation = _useState22[1];\n\n  var _useState23 = useState(getDetails('imageUrls')),\n      _useState24 = _slicedToArray(_useState23, 2),\n      imageUrls = _useState24[0],\n      setImageUrls = _useState24[1];\n\n  var _useState25 = useState(getDetails('damageImageUrls')),\n      _useState26 = _slicedToArray(_useState25, 2),\n      damageImageUrls = _useState26[0],\n      setDamageImageUrls = _useState26[1];\n\n  var _useState27 = useState(getDetails('numImage')),\n      _useState28 = _slicedToArray(_useState27, 2),\n      numImage = _useState28[0],\n      setNumImage = _useState28[1];\n\n  var updateDetails = function updateDetails() {\n    fetch(ngrok_url + \"/update\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: route.params._id,\n        roadNumber: roadNumber,\n        roadName: roadName,\n        fromChainage: parseFloat(fromChainage),\n        toChainage: parseFloat(toChainage),\n        roadLength: parseFloat(roadLength),\n        from: from,\n        to: to,\n        pci: pci,\n        location: location,\n        numImage: numImage,\n        imageUrls: imageUrls,\n        damageImageUrls: damageImageUrls,\n        timeCreated: Date.now(),\n        timeModified: Date.now()\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(\"Road details updated.\");\n      navigation.navigate(\"Home\");\n    }).catch(function (err) {\n      Alert.alert(\"Couldn't update. Try again later!\");\n    });\n  };\n\n  var submitData = function submitData() {\n    fetch(ngrok_url + \"/send-data\", {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        roadNumber: roadNumber,\n        roadName: roadName,\n        fromChainage: fromChainage,\n        toChainage: toChainage,\n        roadLength: roadLength,\n        from: from,\n        to: to,\n        pci: pci,\n        location: location,\n        numImage: numImage,\n        imageUrls: imageUrls,\n        damageImageUrls: damageImageUrls,\n        timeCreated: Date.now(),\n        timeModified: Date.now()\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var handleUpload = function handleUpload(image) {\n    var data = new FormData();\n    var imgUrls = imageUrls;\n    var damageImgUrls = damageImageUrls;\n    data.append('file', image);\n    data.append('upload_preset', 'employeeApp');\n    data.append('cloud_name', 'pathtut');\n    fetch(\"https://api.cloudinary.com/v1_1/pathtut/image/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n      imgUrls.push(data.url);\n      setImageUrls(imgUrls);\n      setNumImage(numImage + 1);\n      fetch(flask_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          'imageUrl': data.url\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (flaskData) {\n        console.log(flaskData);\n        damageImgUrls.push(flaskData.damageImageUrl);\n        setDamageImageUrls(damageImgUrls);\n        setPCI(flaskData.pci);\n        console.log(damageImageUrls);\n        setModal(false);\n        Alert.alert(\"Image uploaded and analysis done.\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(imageUrls);\n      console.log(damageImageUrls);\n    }).catch(function (err) {\n      console.log(err);\n      Alert.alert(\"Error while uploading the file\");\n    });\n  };\n\n  var pickFromCamera = function pickFromCamera() {\n    var _await$Permissions$as, granted, _await$Location$reque, status, currentLoc, loc, data, newFile;\n\n    return _regeneratorRuntime.async(function pickFromCamera$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA).catch(function (err) {\n              return console.log(err);\n            }));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            granted = _await$Permissions$as.granted;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 6:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n            currentLoc = location;\n\n            if (!(granted && status == 'granted')) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              accuracy: Location.Accuracy.Highest,\n              minimumAge: 1\n            }).catch(function (err) {\n              return console.log(err);\n            }));\n\n          case 12:\n            loc = _context.sent;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5,\n              exif: true\n            }));\n\n          case 15:\n            data = _context.sent;\n            currentLoc.push(loc);\n            setLocation(currentLoc);\n            console.log(location);\n\n            if (!data.cancelled) {\n              newFile = {\n                uri: data.uri,\n                type: \"image/\" + data.uri.split(\".\")[1],\n                name: \"test.\" + data.uri.split(\",\")[1]\n              };\n              handleUpload(newFile);\n            }\n\n            _context.next = 23;\n            break;\n\n          case 22:\n            Alert.alert({\n              message: \"Allow to take images using camera.\"\n            });\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    style: styles.root,\n    enabled: enableShift,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"Road Number\",\n    onChangeText: function onChangeText(text) {\n      return setRoadNumber(text);\n    },\n    value: \"\" + roadNumber,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"Road Name\",\n    onChangeText: function onChangeText(text) {\n      return setRoadName(text);\n    },\n    value: roadName,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"From Chainage\",\n    onChangeText: function onChangeText(text) {\n      setFromChainage(text);\n    },\n    value: \"\" + fromChainage,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    keyboardType: \"numeric\",\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"To Chainage\",\n    onChangeText: function onChangeText(text) {\n      setToChainage(text);\n    },\n    value: \"\" + toChainage,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    keyboardType: \"numeric\",\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"Road Length\",\n    onChangeText: function onChangeText(text) {\n      setRoadLength(text);\n    },\n    value: \"\" + roadLength,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    keyboardType: \"numeric\",\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"From\",\n    onChangeText: function onChangeText(text) {\n      setFrom(text);\n    },\n    value: from,\n    onFocus: function onFocus() {\n      setEnableShift(false);\n    },\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    mode: \"outlined\",\n    label: \"To\",\n    onChangeText: function onChangeText(text) {\n      return setTo(text);\n    },\n    value: to,\n    onFocus: function onFocus() {\n      setEnableShift(true);\n    },\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    theme: theme,\n    style: styles.inputStyle,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return setModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, \"Upload Image\"), route.params ? React.createElement(Button, {\n    theme: theme,\n    style: styles.inputStyle,\n    mode: \"contained\",\n    onPress: function onPress() {\n      updateDetails();\n      Alert.alert(\"Road Details updated\");\n      navigation.navigate(\"Home\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, \"Update Details\") : React.createElement(Button, {\n    theme: theme,\n    style: styles.inputStyle,\n    mode: \"contained\",\n    onPress: function onPress() {\n      submitData();\n      Alert.alert(\"Road Details Added\");\n      navigation.navigate(\"Home\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Save\"), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modal,\n    onRequestClose: function onRequestClose() {\n      return setModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.modalButtonView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    theme: theme,\n    style: {\n      width: \"80%\"\n    },\n    mode: \"contained\",\n    onPress: function onPress() {\n      console.log(\"Camera Pressed\");\n      return pickFromCamera();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, \"Camera\")), React.createElement(Button, {\n    theme: theme,\n    onPress: function onPress() {\n      return setModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, \"Cancel\")))));\n};\n\nvar theme = {\n  colors: {\n    primary: \"#000\"\n  }\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  },\n  inputStyle: {\n    fontSize: 18,\n    borderColor: '#000',\n    margin: 3,\n    height: 40\n  },\n  modalButtonView: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  modalView: {\n    position: 'absolute',\n    bottom: 4,\n    width: \"100%\",\n    backgroundColor: \"#ddd\"\n  }\n});\nexport default RoadDetails;","map":{"version":3,"sources":["X:/SIH/Meri-Sadak/screens/RoadDetails.js"],"names":["React","useState","TextInput","Button","ImagePicker","Permissions","Location","RoadDetails","navigation","route","modal","setModal","enableShift","setEnableShift","ngrok_url","flask_url","getDetails","type","params","roadName","roadNumber","fromChainage","toChainage","roadLength","from","to","pci","location","numImage","timeCreated","timeModified","imageUrls","damageImageUrls","setRoadNumber","setRoadName","setToChainage","setFromChainage","setRoadLength","setFrom","setTo","setPCI","setLocation","setImageUrls","setDamageImageUrls","setNumImage","updateDetails","fetch","method","headers","body","JSON","stringify","_id","parseFloat","Date","now","then","res","json","data","Alert","alert","navigate","catch","err","submitData","console","log","handleUpload","image","FormData","imgUrls","damageImgUrls","append","push","url","flaskData","damageImageUrl","pickFromCamera","askAsync","CAMERA","granted","requestPermissionsAsync","status","currentLoc","getCurrentPositionAsync","accuracy","Accuracy","Highest","minimumAge","loc","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","exif","cancelled","newFile","uri","split","name","message","styles","root","inputStyle","text","theme","modalView","modalButtonView","width","colors","primary","StyleSheet","create","flex","fontSize","borderColor","margin","height","flexDirection","justifyContent","padding","position","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, View, Modal, Alert, KeyboardAvoidingView } from 'react-native';\r\nimport {TextInput, Button} from 'react-native-paper';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as Location from 'expo-location';\r\n\r\nconst RoadDetails = ({navigation, route}) => {\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [enableShift, setEnableShift] = useState(false);\r\n    \r\n    const ngrok_url = \"http://29e3833dc1e6.ngrok.io\"\r\n    const flask_url = \"http://632a0311e4c4.ngrok.io/predict\"\r\n    const getDetails = (type) => {\r\n        if(route.params){\r\n            switch(type){\r\n                case \"roadName\":\r\n                    return route.params.roadName\r\n                case \"roadNumber\":\r\n                    return route.params.roadNumber\r\n                case \"fromChainage\":\r\n                    return route.params.fromChainage\r\n                case \"toChainage\":\r\n                    return route.params.toChainage\r\n                case \"roadLength\":\r\n                    return route.params.roadLength\r\n                case \"from\":\r\n                    return route.params.from\r\n                case \"to\":\r\n                    return route.params.to\r\n                case \"pci\":\r\n                    return route.params.pci\r\n                case \"location\":\r\n                    return route.params.location\r\n                case \"numImage\":\r\n                    return route.params.numImage\r\n                case \"timeCreated\":\r\n                    return route.params.timeCreated\r\n                case \"timeModified\":\r\n                    return route.params.timeModified\r\n                case \"imageUrls\":\r\n                    return route.params.imageUrls\r\n                case \"damageImageUrls\":\r\n                    return route.params.damageImageUrls\r\n            }\r\n        }\r\n        else{\r\n            switch (type) {\r\n                case \"roadName\":\r\n                    return \"\"\r\n                case \"roadNumber\":\r\n                    return \"\"\r\n                case \"fromChainage\":\r\n                    return ''\r\n                case \"toChainage\":\r\n                    return ''\r\n                case \"roadLength\":\r\n                    return ''\r\n                case \"from\":\r\n                    return \"\"\r\n                case \"to\":\r\n                    return \"\"\r\n                case \"pci\":\r\n                    return 1\r\n                case \"location\":\r\n                    return []\r\n                case \"numImage\":\r\n                    return 0\r\n                case \"timeCreated\":\r\n                    return \"\"\r\n                case \"timeModified\":\r\n                    return \"\"\r\n                case \"imageUrls\":\r\n                    return []\r\n                case \"damageImageUrls\":\r\n                    return []\r\n            }\r\n        }\r\n    }\r\n    const [roadNumber, setRoadNumber] = useState(getDetails('roadNumber'));\r\n    const [roadName, setRoadName] = useState(getDetails('roadName'));\r\n    const [toChainage, setToChainage] = useState(getDetails('toChainage'));\r\n    const [fromChainage, setFromChainage] = useState(getDetails('fromChainage'));\r\n    const [roadLength, setRoadLength] = useState(getDetails('roadLength'));\r\n    const [from, setFrom] = useState(getDetails('from'));\r\n    const [to, setTo] = useState(getDetails('to'));\r\n    const [pci, setPCI] = useState(getDetails('pci'));\r\n    const [location, setLocation] = useState(getDetails('location'));\r\n    const [imageUrls, setImageUrls] = useState(getDetails('imageUrls'));\r\n    const [damageImageUrls, setDamageImageUrls] = useState(getDetails('damageImageUrls'));\r\n    const [numImage, setNumImage] = useState(getDetails('numImage'));\r\n\r\n    const updateDetails = () => {\r\n        fetch(`${ngrok_url}/update`, {\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                _id: route.params._id,\r\n                roadNumber,\r\n                roadName, \r\n                fromChainage: parseFloat(fromChainage), \r\n                toChainage: parseFloat(toChainage), \r\n                roadLength: parseFloat(roadLength), \r\n                from, \r\n                to, \r\n                pci, \r\n                location, \r\n                numImage, \r\n                imageUrls,\r\n                damageImageUrls, \r\n                timeCreated: Date.now(), \r\n                timeModified: Date.now()\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            Alert.alert(\"Road details updated.\")\r\n            navigation.navigate(\"Home\")\r\n        })\r\n        .catch(err=>{Alert.alert(\"Couldn't update. Try again later!\")}) \r\n    }\r\n\r\n    const submitData = () => {\r\n        fetch(`${ngrok_url}/send-data`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                roadNumber,\r\n                roadName, \r\n                fromChainage, \r\n                toChainage, \r\n                roadLength, \r\n                from, \r\n                to, \r\n                pci, \r\n                location, \r\n                numImage, \r\n                imageUrls, \r\n                damageImageUrls,\r\n                timeCreated: Date.now(), \r\n                timeModified: Date.now()\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleUpload = (image) => {\r\n        const data = new FormData();\r\n        const imgUrls = imageUrls;\r\n        const damageImgUrls = damageImageUrls\r\n        data.append('file', image);\r\n        data.append('upload_preset', 'employeeApp');\r\n        data.append('cloud_name', 'pathtut');\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/pathtut/image/upload\",{\r\n           method: \"POST\",\r\n           body: data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            imgUrls.push(data.url)\r\n            setImageUrls(imgUrls);\r\n            setNumImage(numImage+1)\r\n            fetch(flask_url, {\r\n                method:\"POST\",\r\n                body: JSON.stringify({'imageUrl':data.url}),\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                }\r\n            })\r\n            .then(res=>res.json())\r\n            .then(flaskData=>{\r\n                console.log(flaskData)\r\n                damageImgUrls.push(flaskData.damageImageUrl)\r\n                setDamageImageUrls(damageImgUrls)\r\n                setPCI(flaskData.pci)\r\n                console.log(damageImageUrls)\r\n                setModal(false);\r\n                Alert.alert(\"Image uploaded and analysis done.\")\r\n            })\r\n            .catch(err=>console.log(err))\r\n            console.log(imageUrls)\r\n            console.log(damageImageUrls)\r\n            \r\n        })\r\n        .catch((err) => {\r\n                console.log(err)\r\n                Alert.alert(\"Error while uploading the file\")\r\n        })\r\n        \r\n    }\r\n\r\n    const pickFromCamera = async ()=>{\r\n        const {granted} = await Permissions.askAsync(Permissions.CAMERA).catch(err => console.log(err));\r\n        const {status} = await Location.requestPermissionsAsync();\r\n        const currentLoc = location;\r\n        if (granted&&status=='granted') {\r\n            let loc = await Location.getCurrentPositionAsync({accuracy:Location.Accuracy.Highest, minimumAge:1}).catch(\r\n            err => console.log(err)\r\n            );\r\n            let data = await ImagePicker.launchCameraAsync({\r\n                mediaTypes:ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing: true,\r\n                aspect:[1,1],\r\n                quality: 0.5,\r\n                exif: true\r\n            });\r\n            currentLoc.push(loc);\r\n            setLocation(currentLoc);\r\n            console.log(location)\r\n            if(!data.cancelled){\r\n                let newFile = {\r\n                    uri: data.uri,\r\n                    type: `image/${data.uri.split(\".\")[1]}`,\r\n                    name: `test.${data.uri.split(\",\")[1]}`\r\n                }\r\n\r\n                handleUpload(newFile);\r\n            }\r\n        }\r\n        else{\r\n            Alert.alert(\r\n                { message: \"Allow to take images using camera.\" }\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <KeyboardAvoidingView behavior=\"position\" style={styles.root} enabled={enableShift}>\r\n            <View >\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='Road Number'\r\n                        onChangeText={text=> setRoadNumber(text)}\r\n                        value={`${roadNumber}`}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='Road Name'\r\n                        onChangeText={text => setRoadName(text)}\r\n                        value={roadName}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='From Chainage'\r\n                        onChangeText={(text) => {setFromChainage(text)}}\r\n                        value={`${fromChainage}`}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        keyboardType='numeric'\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='To Chainage'\r\n                        onChangeText={(text) => {setToChainage((text))}}\r\n                        value={`${toChainage}`}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        keyboardType='numeric'\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='Road Length'\r\n                        onChangeText={(text) => {setRoadLength((text))}}\r\n                        value={`${roadLength}`}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        keyboardType='numeric'\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='From'\r\n                        onChangeText={(text) => {setFrom(text)}}\r\n                        value={from}\r\n                        onFocus={() => {setEnableShift(false)}}\r\n                        theme={theme}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.inputStyle}\r\n                        mode=\"outlined\"\r\n                        label='To'\r\n                        onChangeText={(text => setTo((text)))}\r\n                        value={to}\r\n                        onFocus={() => {setEnableShift(true)}}\r\n                        theme={theme}\r\n                    />\r\n                    \r\n                    <Button theme={theme} style={styles.inputStyle } \r\n                    // icon= \"upload\"\r\n                    mode=\"contained\" onPress={() => setModal(true)}>\r\n                        Upload Image\r\n                    </Button>\r\n                    {\r\n                        route.params?\r\n                        <Button theme={theme} style={styles.inputStyle } \r\n                        // icon=\"content-save\" \r\n                        mode=\"contained\" onPress={() => {\r\n                        updateDetails()\r\n                        Alert.alert(\"Road Details updated\");\r\n                        navigation.navigate(\"Home\");\r\n                        }}>\r\n                            Update Details\r\n                        </Button> \r\n                        :\r\n                    <Button theme={theme} style={styles.inputStyle } \r\n                    // icon=\"content-save\" \r\n                    mode=\"contained\" onPress={() => {\r\n                    submitData( );\r\n                    Alert.alert(\"Road Details Added\");\r\n                    navigation.navigate(\"Home\");\r\n                    }}>\r\n                        Save\r\n                    </Button>\r\n                    }\r\n                <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modal}\r\n                onRequestClose={() => setModal(false)}\r\n                >\r\n                    <View style={styles.modalView}>\r\n                        <View style={styles.modalButtonView}>\r\n                            <Button theme={theme} style={{width: \"80%\"}}\r\n                            // icon=\"camera\" \r\n                            mode=\"contained\" onPress={() => {\r\n                                console.log(\"Camera Pressed\")\r\n                                return pickFromCamera();\r\n                                }}>\r\n                                Camera\r\n                            </Button>\r\n                        </View>\r\n                        <Button theme={theme} \r\n                        // icon=\"close-circle\" \r\n                        onPress={() => setModal(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </View> \r\n                </Modal>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst theme = {\r\n    colors:{\r\n        primary: \"#000\",\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        flex: 1,\r\n    },\r\n    inputStyle: {\r\n        fontSize: 18,\r\n        borderColor: '#000',\r\n        margin: 3,\r\n        height: 40\r\n    },\r\n    modalButtonView:{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        padding: 10\r\n    },\r\n    modalView:{\r\n        position: 'absolute',\r\n        bottom: 4,\r\n        width: \"100%\",\r\n        backgroundColor:\"#ddd\"\r\n    }\r\n})\r\n\r\nexport default RoadDetails;"]},"metadata":{},"sourceType":"module"}