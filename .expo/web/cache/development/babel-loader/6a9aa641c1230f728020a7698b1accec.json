{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nexport var createCache = function createCache(cacheSize) {\n  return {\n    _storage: [],\n    get: function get(key) {\n      var _ref = this._storage.find(function (_ref2) {\n        var storageKey = _ref2.key;\n        return storageKey === key;\n      }) || {},\n          value = _ref.value;\n\n      return value;\n    },\n    set: function set(key, value) {\n      if (this._storage.length >= cacheSize) {\n        this._storage.shift();\n      }\n\n      this._storage.push({\n        key: key,\n        value: value\n      });\n    }\n  };\n};\nexport var splitArrayIntoBatches = function splitArrayIntoBatches(arr, batchSize) {\n  return arr.reduce(function (result, item) {\n    var batch = result.pop() || [];\n\n    if (batch.length < batchSize) {\n      batch.push(item);\n      result.push(batch);\n    } else {\n      result.push(batch, [item]);\n    }\n\n    return result;\n  }, []);\n};\nexport var getImageTransform = function getImageTransform(image, screen) {\n  var _a, _b;\n\n  if (!((_a = image) === null || _a === void 0 ? void 0 : _a.width) || !((_b = image) === null || _b === void 0 ? void 0 : _b.height)) {\n    return [];\n  }\n\n  var wScale = screen.width / image.width;\n  var hScale = screen.height / image.height;\n  var scale = Math.min(wScale, hScale);\n\n  var _getImageTranslate = getImageTranslate(image, screen),\n      x = _getImageTranslate.x,\n      y = _getImageTranslate.y;\n\n  return [{\n    x: x,\n    y: y\n  }, scale];\n};\nexport var getImageStyles = function getImageStyles(image, translate, scale) {\n  var _a, _b;\n\n  if (!((_a = image) === null || _a === void 0 ? void 0 : _a.width) || !((_b = image) === null || _b === void 0 ? void 0 : _b.height)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var transform = translate.getTranslateTransform();\n\n  if (scale) {\n    transform.push({\n      scale: scale\n    }, {\n      perspective: new Animated.Value(1000)\n    });\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n    transform: transform\n  };\n};\nexport var getImageTranslate = function getImageTranslate(image, screen) {\n  var getTranslateForAxis = function getTranslateForAxis(axis) {\n    var imageSize = axis === \"x\" ? image.width : image.height;\n    var screenSize = axis === \"x\" ? screen.width : screen.height;\n    return (screenSize - imageSize) / 2;\n  };\n\n  return {\n    x: getTranslateForAxis(\"x\"),\n    y: getTranslateForAxis(\"y\")\n  };\n};\nexport var getImageDimensionsByTranslate = function getImageDimensionsByTranslate(translate, screen) {\n  return {\n    width: screen.width - translate.x * 2,\n    height: screen.height - translate.y * 2\n  };\n};\nexport var getImageTranslateForScale = function getImageTranslateForScale(currentTranslate, targetScale, screen) {\n  var _getImageDimensionsBy = getImageDimensionsByTranslate(currentTranslate, screen),\n      width = _getImageDimensionsBy.width,\n      height = _getImageDimensionsBy.height;\n\n  var targetImageDimensions = {\n    width: width * targetScale,\n    height: height * targetScale\n  };\n  return getImageTranslate(targetImageDimensions, screen);\n};\nexport var createPanResponder = function createPanResponder(_ref3) {\n  var onGrant = _ref3.onGrant,\n      onStart = _ref3.onStart,\n      onMove = _ref3.onMove,\n      onRelease = _ref3.onRelease,\n      onTerminate = _ref3.onTerminate;\n  return PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n      return true;\n    },\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n      return true;\n    },\n    onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n      return true;\n    },\n    onPanResponderGrant: onGrant,\n    onPanResponderStart: onStart,\n    onPanResponderMove: onMove,\n    onPanResponderRelease: onRelease,\n    onPanResponderTerminate: onTerminate,\n    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n      return false;\n    },\n    onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {\n      return false;\n    }\n  });\n};\nexport var getDistanceBetweenTouches = function getDistanceBetweenTouches(touches) {\n  var _touches = _slicedToArray(touches, 2),\n      a = _touches[0],\n      b = _touches[1];\n\n  if (a == null || b == null) {\n    return 0;\n  }\n\n  return Math.sqrt(Math.pow(a.pageX - b.pageX, 2) + Math.pow(a.pageY - b.pageY, 2));\n};","map":{"version":3,"sources":["X:/SIH/Meri-Sadak/node_modules/react-native-image-viewing/dist/utils.js"],"names":["createCache","cacheSize","_storage","get","key","find","storageKey","value","set","length","shift","push","splitArrayIntoBatches","arr","batchSize","reduce","result","item","batch","pop","getImageTransform","image","screen","_a","_b","width","height","wScale","hScale","scale","Math","min","getImageTranslate","x","y","getImageStyles","translate","transform","getTranslateTransform","perspective","Animated","Value","getTranslateForAxis","axis","imageSize","screenSize","getImageDimensionsByTranslate","getImageTranslateForScale","currentTranslate","targetScale","targetImageDimensions","createPanResponder","onGrant","onStart","onMove","onRelease","onTerminate","PanResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderStart","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","onPanResponderTerminationRequest","onShouldBlockNativeResponder","getDistanceBetweenTouches","touches","a","b","sqrt","pow","pageX","pageY"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) JOB TODAY S.A. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { Animated, PanResponder, } from \"react-native\";\nexport const createCache = (cacheSize) => ({\n    _storage: [],\n    get(key) {\n        const { value } = this._storage.find(({ key: storageKey }) => storageKey === key) || {};\n        return value;\n    },\n    set(key, value) {\n        if (this._storage.length >= cacheSize) {\n            this._storage.shift();\n        }\n        this._storage.push({ key, value });\n    },\n});\nexport const splitArrayIntoBatches = (arr, batchSize) => arr.reduce((result, item) => {\n    const batch = result.pop() || [];\n    if (batch.length < batchSize) {\n        batch.push(item);\n        result.push(batch);\n    }\n    else {\n        result.push(batch, [item]);\n    }\n    return result;\n}, []);\nexport const getImageTransform = (image, screen) => {\n    var _a, _b;\n    if (!((_a = image) === null || _a === void 0 ? void 0 : _a.width) || !((_b = image) === null || _b === void 0 ? void 0 : _b.height)) {\n        return [];\n    }\n    const wScale = screen.width / image.width;\n    const hScale = screen.height / image.height;\n    const scale = Math.min(wScale, hScale);\n    const { x, y } = getImageTranslate(image, screen);\n    return [{ x, y }, scale];\n};\nexport const getImageStyles = (image, translate, scale) => {\n    var _a, _b;\n    if (!((_a = image) === null || _a === void 0 ? void 0 : _a.width) || !((_b = image) === null || _b === void 0 ? void 0 : _b.height)) {\n        return { width: 0, height: 0 };\n    }\n    const transform = translate.getTranslateTransform();\n    if (scale) {\n        transform.push({ scale }, { perspective: new Animated.Value(1000) });\n    }\n    return {\n        width: image.width,\n        height: image.height,\n        transform,\n    };\n};\nexport const getImageTranslate = (image, screen) => {\n    const getTranslateForAxis = (axis) => {\n        const imageSize = axis === \"x\" ? image.width : image.height;\n        const screenSize = axis === \"x\" ? screen.width : screen.height;\n        return (screenSize - imageSize) / 2;\n    };\n    return {\n        x: getTranslateForAxis(\"x\"),\n        y: getTranslateForAxis(\"y\"),\n    };\n};\nexport const getImageDimensionsByTranslate = (translate, screen) => ({\n    width: screen.width - translate.x * 2,\n    height: screen.height - translate.y * 2,\n});\nexport const getImageTranslateForScale = (currentTranslate, targetScale, screen) => {\n    const { width, height } = getImageDimensionsByTranslate(currentTranslate, screen);\n    const targetImageDimensions = {\n        width: width * targetScale,\n        height: height * targetScale,\n    };\n    return getImageTranslate(targetImageDimensions, screen);\n};\nexport const createPanResponder = ({ onGrant, onStart, onMove, onRelease, onTerminate, }) => PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onStartShouldSetPanResponderCapture: () => true,\n    onMoveShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderGrant: onGrant,\n    onPanResponderStart: onStart,\n    onPanResponderMove: onMove,\n    onPanResponderRelease: onRelease,\n    onPanResponderTerminate: onTerminate,\n    onPanResponderTerminationRequest: () => false,\n    onShouldBlockNativeResponder: () => false,\n});\nexport const getDistanceBetweenTouches = (touches) => {\n    const [a, b] = touches;\n    if (a == null || b == null) {\n        return 0;\n    }\n    return Math.sqrt(Math.pow(a.pageX - b.pageX, 2) + Math.pow(a.pageY - b.pageY, 2));\n};\n"]},"metadata":{},"sourceType":"module"}