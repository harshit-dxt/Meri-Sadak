{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"X:\\\\SIH\\\\Meri-Sadak\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { reducer, initialState, myContext } from \"./reducers/reducer.js\";\nimport Home from \"./screens/Home\";\nimport RoadDetails from \"./screens/RoadDetails\";\nimport Profile from \"./screens/Profile\";\nimport ViewImage from \"./screens/ViewImage\";\nvar Stack = createStackNavigator();\nvar myOptions = {\n  headerTintColor: \"#000\",\n  headerStyle: {\n    backgroundColor: \"#fff\"\n  }\n};\n\nfunction App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: myOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Create\",\n    component: RoadDetails,\n    options: _objectSpread(_objectSpread({}, myOptions), {}, {\n      title: \"Road Details\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RoadProfile\",\n    component: Profile,\n    options: _objectSpread(_objectSpread({}, myOptions), {}, {\n      title: \"Road Profile\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ViewImage\",\n    component: ViewImage,\n    options: _objectSpread(_objectSpread({}, myOptions), {}, {\n      title: \"Image Viewer\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\nexport default (function () {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(myContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["X:/SIH/Meri-Sadak/App.js"],"names":["React","useReducer","NavigationContainer","createStackNavigator","reducer","initialState","myContext","Home","RoadDetails","Profile","ViewImage","Stack","myOptions","headerTintColor","headerStyle","backgroundColor","App","styles","container","title","StyleSheet","create","flex","state","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,SAAhC;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;AAEA,IAAMS,SAAS,GAAG;AAChBC,EAAAA,eAAe,EAAE,MADD;AAEhBC,EAAAA,WAAW,EAAC;AACVC,IAAAA,eAAe,EAAC;AADN;AAFI,CAAlB;;AAOA,SAASC,GAAT,GAAe;AACb,SACI,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEX,IAFb;AAGE,IAAA,OAAO,EAAEK,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEJ,WAFb;AAGE,IAAA,OAAO,kCAAMI,SAAN;AAAiBO,MAAAA,KAAK,EAAE;AAAxB,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEV,OAFb;AAGE,IAAA,OAAO,kCAAMG,SAAN;AAAiBO,MAAAA,KAAK,EAAE;AAAxB,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAET,SAFb;AAGE,IAAA,OAAO,kCAAME,SAAN;AAAiBO,MAAAA,KAAK,EAAE;AAAxB,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAHF,CADJ;AA4BD;;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETP,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;AAOA,gBAAe,YAAM;AAAA,oBACOd,UAAU,CAACG,OAAD,EAAUC,YAAV,CADjB;AAAA;AAAA,MACZkB,KADY;AAAA,MACLC,QADK;;AAEnB,SACE,oBAAE,SAAF,CAAY,QAAZ;AACE,IAAA,KAAK,EACH;AAACD,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,QAAQ,EAARA;AAAR,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAWD,CAbD","sourcesContent":["import React, {useReducer} from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { reducer, initialState, myContext} from './reducers/reducer.js';\r\nimport Home from './screens/Home';\r\nimport RoadDetails from './screens/RoadDetails';\r\nimport Profile from './screens/Profile';\r\nimport ViewImage from './screens/ViewImage'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst myOptions = {\r\n  headerTintColor: \"#000\",\r\n  headerStyle:{\r\n    backgroundColor:\"#fff\", \r\n  }   \r\n}\r\n\r\nfunction App() {\r\n  return (\r\n      <View\r\n        style={styles.container}\r\n      >\r\n        <Stack.Navigator>\r\n          <Stack.Screen \r\n            name=\"Home\"\r\n            component={Home}\r\n            options={myOptions}\r\n          />\r\n          <Stack.Screen \r\n            name=\"Create\"\r\n            component={RoadDetails}\r\n            options={{...myOptions, title: \"Road Details\"}}\r\n          />\r\n          <Stack.Screen \r\n            name=\"RoadProfile\"\r\n            component={Profile}\r\n            options={{...myOptions, title: \"Road Profile\"}}\r\n          />\r\n          <Stack.Screen \r\n            name=\"ViewImage\"\r\n            component={ViewImage}\r\n            options={{...myOptions, title: \"Image Viewer\"}}\r\n          />\r\n        </Stack.Navigator>\r\n      </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n\r\nexport default () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    < myContext.Provider \r\n      value={\r\n        {state, dispatch}\r\n      }\r\n    >\r\n      <NavigationContainer>\r\n        <App />\r\n      </NavigationContainer>\r\n    </myContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}